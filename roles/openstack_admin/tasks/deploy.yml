---
############################################################
#  tasks file for preparing openstack
############################################################
- name: List current os domains
  vars:
    openstack_client_command: "domain list"
    cli_result: 'yes'
  import_tasks: "os_client.yml"
  when: false

- name: DEBUG
  debug:
    var: osclient_result

- name: Make os domains list
  set_fact:
    os_domain_list: "{{ osclient_result | kemopq.freeipa_kolla.os_domain_list }}"

- name: Create os domains loop
  include_tasks: "os_domain_create.yml"
  when: openstack_domains is defined
  loop: "{{ openstack_domains | dict2items }}"
  loop_control:
    loop_var: ii_domain
    label: "{{ ii_domain.key }}"

# EXAMPLE:
# - name: Get os domains
#   vars:
#     openstack_client_command: "users list"
#     cli_result: 'yes'
#   include_tasks: "os_client.yml"

# - name: Print name of the users
#   debug:
#     msg: "{{ item.Name }}"
#   loop: "{{ osclient_result }}"
#   loop_control:
#     label: "{{ item.Name }}"

# openstack domain list
# if{{ openstack_domain }} not in list
#   openstack domain create --description "Automatically generated by FreeIPA install script." {{ openstack_domain }}
#
# openstack project list --domain {{ openstack_domain }}
# if{{ openstack_project }} not in list
#  openstack project create --domain {{ openstack_domain }} --description "Automatically generated by FreeIPA install script." {{ openstack_project }}
#
#  OSADMINS_GRP_ID = openstack group list --domain {{ openstack_domain }} -f value |  grep osadmins
#  openstack role add --group $OSADMINS_GRP_ID --project {{ openstack_project }} --group-domain {{ openstack_domain }} admin
#
#  OSMEMBERS_GRP_ID=$(openstack group list --domain {{ openstack_domain }} -f value |  grep osmembers
#  openstack role add --group $OSMEMBERS_GRP_ID --project {{ openstack_project }} --group-domain {{ openstack_domain }} _member_
